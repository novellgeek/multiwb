import sys
import json
from PyQt5 import QtWidgets, QtCore
from PyQt5.QtWebEngineWidgets import QWebEngineView

class WebWindow(QtWidgets.QWidget):
    def __init__(self, config):
        super().__init__()
        self.setWindowTitle(config.get("title", "WebView"))
        self.setGeometry(
            config.get("x", 100),
            config.get("y", 100),
            config.get("width", 800),
            config.get("height", 600),
        )
        if config.get("fullscreen", False):
            self.showFullScreen()
        layout = QtWidgets.QVBoxLayout(self)
        
        # Funky close button (top-right)
        close_btn = QtWidgets.QPushButton("âœ–")
        close_btn.setFixedSize(32, 32)
        close_btn.setStyleSheet("""
            QPushButton { 
                border: none; 
                background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #00ffff, stop:1 #ff00ff); 
                font-weight: bold; font-size: 18px; color: #222244; border-radius: 16px;
            }
            QPushButton:hover { background: #FFFF00; color: #FF00FF; }
        """)
        close_btn.clicked.connect(self.close)
        
        # Top bar layout
        top_bar = QtWidgets.QHBoxLayout()
        top_bar.addStretch()
        top_bar.addWidget(close_btn)
        
        self.webview = QWebEngineView(self)
        self.webview.setUrl(QtCore.QUrl(config["url"]))
        self.webview.setZoomFactor(config.get("zoom", 1.0))
        
        layout.addLayout(top_bar)
        layout.addWidget(self.webview)

def launch_windows(config_path):
    with open(config_path, "r") as f:
        config = json.load(f)
    app = QtWidgets.QApplication(sys.argv)
    windows = []
    for win_cfg in config.get("windows", []):
        win = WebWindow(win_cfg)
        win.show()
        windows.append(win)
    sys.exit(app.exec_())

if __name__ == "__main__":
    launch_windows(sys.argv[1])
